{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///InputElement.js","webpack:///webpack/bootstrap 2ca09c881ddb23aad07c","webpack:///./InputElement.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}"],"names":["root","factory","exports","module","require","define","amd","ReactInputMask","React","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","oe","err","p","s","_objectWithoutProperties","obj","keys","target","i","indexOf","Object","prototype","hasOwnProperty","_extends","assign","arguments","length","source","key","_typeof","Symbol","iterator","constructor","InputElement","createClass","displayName","defaultCharsRules","9","a","*","defaultMaskChar","optionalIndex","lastCaretPos","isAndroidBrowser","windows","RegExp","firefox","android","ua","navigator","userAgent","test","isWindowsPhoneBrowser","phone","isAndroidFirefox","isDOMElement","element","HTMLElement","nodeType","nodeName","getInputDOMNode","input","refs","getDOMNode","enableValueAccessors","_this","canUseAccessors","getOwnPropertyDescriptor","getPrototypeOf","defineProperty","valueDescriptor","configurable","enumerable","get","value","set","val","disableValueAccessors","getInputValue","getPrefix","prefix","mask","isPermanentChar","getFilledLength","undefined","state","maskChar","character","isAllowedChar","getLeftEditablePos","pos","getRightEditablePos","isEmpty","_this2","split","some","isFilled","createFilledArray","array","formatValue","_this3","prefixLen","insertRawSubstr","slice","emptyValue","concat","map","join","clearRange","start","len","_this4","end","filter","replaceSubstr","newSubstr","substr","isPermanent","shift","getRawSubstrLength","allowMaskChar","ruleChar","charRule","charsRules","permanents","setCaretToEnd","filledLen","setCaretPos","setSelection","selectionStart","selectionEnd","range","createTextRange","collapse","moveStart","moveEnd","select","getSelection","document","selection","createRange","parentElement","getCaretPos","raf","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","fn","setTimeout","setPos","bind","isFocused","activeElement","parseMask","_this5","lastEditablePos","str","forEach","push","getStringValue","getInitialState","hasValue","props","formatChars","replace","defaultValue","alwaysShowMask","componentWillMount","setState","componentWillReceiveProps","nextProps","oldMask","isMaskChanged","newValue","showEmpty","componentDidUpdate","prevProps","prevState","updateUncontrolledInput","onKeyDown","event","hasHandler","ctrlKey","metaKey","caretPos","preventDefault","deleteFromRight","selectionRange","editablePos","onChange","onKeyPress","_this6","pasteSelection","preventEmptyChange","oldValue","pasteText","clearedValue","maskLen","valueLen","oldValueLen","substrLen","startPos","enteredSubstr","removedLen","clearOnly","onFocus","tempValue","optionMask","substring","onBlur","clear","requiredValue","optionalValue","maskCharIndex","onPaste","text","clipboardData","getData","textLen","componentDidMount","render","_this7","_props","handlersKeys","createElement","ref"],"mappings":"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","file":"InputElement.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactInputMask\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactInputMask\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactInputMask\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactInputMask\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// on error function for async loading\n/******/ \t__webpack_require__.oe = function(err) { throw err; };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tvar React = __webpack_require__(1);\n\t\n\tvar InputElement = React.createClass({\n\t    displayName: \"InputElement\",\n\t\n\t    defaultCharsRules: {\n\t        \"9\": \"[0-9]\",\n\t        \"a\": \"[A-Za-z]\",\n\t        \"*\": \"[A-Za-z0-9]\"\n\t    },\n\t    defaultMaskChar: \"_\",\n\t    optionalIndex: -1,\n\t    lastCaretPos: null,\n\t    isAndroidBrowser: function isAndroidBrowser() {\n\t        var windows = new RegExp(\"windows\", \"i\");\n\t        var firefox = new RegExp(\"firefox\", \"i\");\n\t        var android = new RegExp(\"android\", \"i\");\n\t        var ua = navigator.userAgent;\n\t        return !windows.test(ua) && !firefox.test(ua) && android.test(ua);\n\t    },\n\t    isWindowsPhoneBrowser: function isWindowsPhoneBrowser() {\n\t        var windows = new RegExp(\"windows\", \"i\");\n\t        var phone = new RegExp(\"phone\", \"i\");\n\t        var ua = navigator.userAgent;\n\t        return windows.test(ua) && phone.test(ua);\n\t    },\n\t    isAndroidFirefox: function isAndroidFirefox() {\n\t        var windows = new RegExp(\"windows\", \"i\");\n\t        var firefox = new RegExp(\"firefox\", \"i\");\n\t        var android = new RegExp(\"android\", \"i\");\n\t        var ua = navigator.userAgent;\n\t        return !windows.test(ua) && firefox.test(ua) && android.test(ua);\n\t    },\n\t    isDOMElement: function isDOMElement(element) {\n\t        return (typeof HTMLElement === \"undefined\" ? \"undefined\" : _typeof(HTMLElement)) === \"object\" ? element instanceof HTMLElement : element.nodeType === 1 && typeof element.nodeName === \"string\";\n\t    },\n\t\n\t    getInputDOMNode: function getInputDOMNode() {\n\t        var input = this.refs.input;\n\t\n\t        if (!input) {\n\t            return null;\n\t        }\n\t\n\t        if (this.isDOMElement(input)) {\n\t            return input;\n\t        }\n\t\n\t        return input.getDOMNode();\n\t    },\n\t    enableValueAccessors: function enableValueAccessors() {\n\t        var _this = this;\n\t\n\t        var canUseAccessors = !!(Object.getOwnPropertyDescriptor && Object.getPrototypeOf && Object.defineProperty);\n\t        if (canUseAccessors) {\n\t            var input = this.getInputDOMNode();\n\t            this.valueDescriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(input), 'value');\n\t            Object.defineProperty(input, 'value', {\n\t                configurable: true,\n\t                enumerable: true,\n\t                get: function get() {\n\t                    return _this.value;\n\t                },\n\t                set: function set(val) {\n\t                    _this.value = val;\n\t                    _this.valueDescriptor.set.call(input, val);\n\t                }\n\t            });\n\t        }\n\t    },\n\t    disableValueAccessors: function disableValueAccessors() {\n\t        var valueDescriptor = this.valueDescriptor;\n\t\n\t        if (!valueDescriptor) {\n\t            return;\n\t        }\n\t        this.valueDescriptor = null;\n\t        var input = this.getInputDOMNode();\n\t        Object.defineProperty(input, 'value', valueDescriptor);\n\t    },\n\t    getInputValue: function getInputValue() {\n\t        var input = this.getInputDOMNode();\n\t        var valueDescriptor = this.valueDescriptor;\n\t\n\t\n\t        var value;\n\t        if (valueDescriptor) {\n\t            value = valueDescriptor.get.call(input);\n\t        } else {\n\t            value = input.value;\n\t        }\n\t\n\t        return value;\n\t    },\n\t    getPrefix: function getPrefix() {\n\t        var prefix = \"\";\n\t        var mask = this.mask;\n\t\n\t        for (var i = 0; i < mask.length && this.isPermanentChar(i); ++i) {\n\t            prefix += mask[i];\n\t        }\n\t        return prefix;\n\t    },\n\t    getFilledLength: function getFilledLength() {\n\t        var value = arguments.length <= 0 || arguments[0] === undefined ? this.state.value : arguments[0];\n\t\n\t        var i;\n\t        var maskChar = this.maskChar;\n\t\n\t\n\t        if (!maskChar) {\n\t            return value.length;\n\t        }\n\t\n\t        for (i = value.length - 1; i >= 0; --i) {\n\t            var character = value[i];\n\t            if (!this.isPermanentChar(i) && this.isAllowedChar(character, i)) {\n\t                break;\n\t            }\n\t        }\n\t\n\t        return ++i || this.getPrefix().length;\n\t    },\n\t    getLeftEditablePos: function getLeftEditablePos(pos) {\n\t        for (var i = pos; i >= 0; --i) {\n\t            if (!this.isPermanentChar(i)) {\n\t                return i;\n\t            }\n\t        }\n\t        return null;\n\t    },\n\t    getRightEditablePos: function getRightEditablePos(pos) {\n\t        var mask = this.mask;\n\t\n\t        for (var i = pos; i < mask.length; ++i) {\n\t            if (!this.isPermanentChar(i)) {\n\t                return i;\n\t            }\n\t        }\n\t        return null;\n\t    },\n\t    isEmpty: function isEmpty() {\n\t        var _this2 = this;\n\t\n\t        var value = arguments.length <= 0 || arguments[0] === undefined ? this.state.value : arguments[0];\n\t\n\t        return !value.split(\"\").some(function (character, i) {\n\t            return !_this2.isPermanentChar(i) && _this2.isAllowedChar(character, i);\n\t        });\n\t    },\n\t    isFilled: function isFilled() {\n\t        var value = arguments.length <= 0 || arguments[0] === undefined ? this.state.value : arguments[0];\n\t\n\t        return this.getFilledLength(value) === this.mask.length;\n\t    },\n\t    createFilledArray: function createFilledArray(length, val) {\n\t        var array = [];\n\t        for (var i = 0; i < length; i++) {\n\t            array[i] = val;\n\t        }\n\t        return array;\n\t    },\n\t    formatValue: function formatValue(value) {\n\t        var _this3 = this;\n\t\n\t        var maskChar = this.maskChar;\n\t        var mask = this.mask;\n\t\n\t        if (!maskChar) {\n\t            var prefix = this.getPrefix();\n\t            var prefixLen = prefix.length;\n\t            value = this.insertRawSubstr(\"\", value, 0);\n\t            while (value.length > prefixLen && this.isPermanentChar(value.length - 1)) {\n\t                value = value.slice(0, value.length - 1);\n\t            }\n\t\n\t            if (value.length < prefixLen) {\n\t                value = prefix;\n\t            }\n\t\n\t            return value;\n\t        }\n\t        if (value) {\n\t            var emptyValue = this.formatValue(\"\");\n\t            return this.insertRawSubstr(emptyValue, value, 0);\n\t        }\n\t        return value.split(\"\").concat(this.createFilledArray(mask.length - value.length, null)).map(function (character, pos) {\n\t            if (_this3.isAllowedChar(character, pos)) {\n\t                return character;\n\t            } else if (_this3.isPermanentChar(pos)) {\n\t                return mask[pos];\n\t            }\n\t            return maskChar;\n\t        }).join(\"\");\n\t    },\n\t    clearRange: function clearRange(value, start, len) {\n\t        var _this4 = this;\n\t\n\t        var end = start + len;\n\t        var maskChar = this.maskChar;\n\t        var mask = this.mask;\n\t\n\t        if (!maskChar) {\n\t            var prefixLen = this.getPrefix().length;\n\t            value = value.split(\"\").filter(function (character, i) {\n\t                return i < prefixLen || i < start || i >= end;\n\t            }).join(\"\");\n\t            return this.formatValue(value);\n\t        }\n\t        return value.split(\"\").map(function (character, i) {\n\t            if (i < start || i >= end) {\n\t                return character;\n\t            }\n\t            if (_this4.isPermanentChar(i)) {\n\t                return mask[i];\n\t            }\n\t            return maskChar;\n\t        }).join(\"\");\n\t    },\n\t    replaceSubstr: function replaceSubstr(value, newSubstr, pos) {\n\t        return value.slice(0, pos) + newSubstr + value.slice(pos + newSubstr.length);\n\t    },\n\t    insertRawSubstr: function insertRawSubstr(value, substr, pos) {\n\t        var mask = this.mask;\n\t        var maskChar = this.maskChar;\n\t\n\t        var isFilled = this.isFilled(value);\n\t        var prefixLen = this.getPrefix().length;\n\t        substr = substr.split(\"\");\n\t\n\t        if (!maskChar && pos > value.length) {\n\t            value += mask.slice(value.length, pos);\n\t        }\n\t\n\t        for (var i = pos; i < mask.length && substr.length;) {\n\t            var isPermanent = this.isPermanentChar(i);\n\t            if (!isPermanent || mask[i] === substr[0]) {\n\t                var character = substr.shift();\n\t                if (this.isAllowedChar(character, i, true)) {\n\t                    if (i < value.length) {\n\t                        if (maskChar || isFilled || i < prefixLen) {\n\t                            value = this.replaceSubstr(value, character, i);\n\t                        } else {\n\t                            value = this.formatValue(value.substr(0, i) + character + value.substr(i));\n\t                        }\n\t                    } else if (!maskChar) {\n\t                        value += character;\n\t                    }\n\t                    ++i;\n\t                }\n\t            } else {\n\t                if (!maskChar && i >= value.length) {\n\t                    value += mask[i];\n\t                } else if (maskChar && isPermanent && substr[0] === maskChar) {\n\t                    substr.shift();\n\t                }\n\t                ++i;\n\t            }\n\t        }\n\t        return value;\n\t    },\n\t    getRawSubstrLength: function getRawSubstrLength(value, substr, pos) {\n\t        var mask = this.mask;\n\t        var maskChar = this.maskChar;\n\t\n\t        substr = substr.split(\"\");\n\t        for (var i = pos; i < mask.length && substr.length;) {\n\t            if (!this.isPermanentChar(i) || mask[i] === substr[0]) {\n\t                var character = substr.shift();\n\t                if (this.isAllowedChar(character, i, true)) {\n\t                    ++i;\n\t                }\n\t            } else {\n\t                ++i;\n\t            }\n\t        }\n\t        return i - pos;\n\t    },\n\t    isAllowedChar: function isAllowedChar(character, pos) {\n\t        var allowMaskChar = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\t        var mask = this.mask;\n\t        var maskChar = this.maskChar;\n\t\n\t        if (this.isPermanentChar(pos)) {\n\t            return mask[pos] === character;\n\t        }\n\t        var ruleChar = mask[pos];\n\t        var charRule = this.charsRules[ruleChar];\n\t        return new RegExp(charRule).test(character || \"\") || allowMaskChar && character === maskChar;\n\t    },\n\t    isPermanentChar: function isPermanentChar(pos) {\n\t        return this.permanents.indexOf(pos) !== -1;\n\t    },\n\t    setCaretToEnd: function setCaretToEnd() {\n\t        var filledLen = this.getFilledLength();\n\t        var pos = this.getRightEditablePos(filledLen);\n\t        if (pos !== null) {\n\t            this.setCaretPos(pos);\n\t        }\n\t    },\n\t    setSelection: function setSelection(start) {\n\t        var len = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\t\n\t        var input = this.getInputDOMNode();\n\t        if (!input) {\n\t            return;\n\t        }\n\t\n\t        var end = start + len;\n\t        if (\"selectionStart\" in input && \"selectionEnd\" in input) {\n\t            input.selectionStart = start;\n\t            input.selectionEnd = end;\n\t        } else {\n\t            var range = input.createTextRange();\n\t            range.collapse(true);\n\t            range.moveStart(\"character\", start);\n\t            range.moveEnd(\"character\", end - start);\n\t            range.select();\n\t        }\n\t    },\n\t    getSelection: function getSelection() {\n\t        var input = this.getInputDOMNode();\n\t        var start = 0;\n\t        var end = 0;\n\t\n\t        if (\"selectionStart\" in input && \"selectionEnd\" in input) {\n\t            start = input.selectionStart;\n\t            end = input.selectionEnd;\n\t        } else {\n\t            var range = document.selection.createRange();\n\t            if (range.parentElement() === input) {\n\t                start = -range.moveStart(\"character\", -input.value.length);\n\t                end = -range.moveEnd(\"character\", -input.value.length);\n\t            }\n\t        }\n\t\n\t        return {\n\t            start: start,\n\t            end: end,\n\t            length: end - start\n\t        };\n\t    },\n\t    getCaretPos: function getCaretPos() {\n\t        return this.getSelection().start;\n\t    },\n\t    setCaretPos: function setCaretPos(pos) {\n\t        var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (fn) {\n\t            return setTimeout(fn, 0);\n\t        };\n\t\n\t        var setPos = this.setSelection.bind(this, pos, 0);\n\t\n\t        setPos();\n\t        raf(setPos);\n\t\n\t        this.lastCaretPos = pos;\n\t    },\n\t    isFocused: function isFocused() {\n\t        return document.activeElement === this.getInputDOMNode();\n\t    },\n\t    parseMask: function parseMask(mask) {\n\t        var _this5 = this;\n\t\n\t        if (!mask || typeof mask !== \"string\") {\n\t            return {\n\t                mask: null,\n\t                lastEditablePos: null,\n\t                permanents: []\n\t            };\n\t        }\n\t        var str = \"\";\n\t        var permanents = [];\n\t        var isPermanent = false;\n\t        var lastEditablePos = null;\n\t\n\t        mask.split(\"\").forEach(function (character) {\n\t            if (!isPermanent && character === \"\\\\\") {\n\t                isPermanent = true;\n\t            } else {\n\t                if (isPermanent || !_this5.charsRules[character]) {\n\t                    permanents.push(str.length);\n\t                } else {\n\t                    lastEditablePos = str.length;\n\t                }\n\t                str += character;\n\t                isPermanent = false;\n\t            }\n\t        });\n\t\n\t        return {\n\t            mask: str,\n\t            lastEditablePos: lastEditablePos,\n\t            permanents: permanents\n\t        };\n\t    },\n\t    getStringValue: function getStringValue(value) {\n\t        return !value && value !== 0 ? \"\" : value + \"\";\n\t    },\n\t    getInitialState: function getInitialState() {\n\t        this.hasValue = this.props.value != null;\n\t        this.optionalIndex = this.props.mask.indexOf('?');\n\t        this.charsRules = \"formatChars\" in this.props ? this.props.formatChars : this.defaultCharsRules;\n\t\n\t        var mask = this.parseMask(this.props.mask.replace('?', ''));\n\t        var defaultValue = this.props.defaultValue != null ? this.props.defaultValue : '';\n\t        var value = this.props.value != null ? this.props.value : defaultValue;\n\t\n\t        value = this.getStringValue(value);\n\t\n\t        this.mask = mask.mask;\n\t        this.permanents = mask.permanents;\n\t        this.lastEditablePos = mask.lastEditablePos;\n\t        this.maskChar = \"maskChar\" in this.props ? this.props.maskChar : this.defaultMaskChar;\n\t\n\t        if (this.mask && (this.props.alwaysShowMask || value)) {\n\t            value = this.formatValue(value);\n\t        }\n\t\n\t        return { value: value };\n\t    },\n\t    componentWillMount: function componentWillMount() {\n\t        var mask = this.mask;\n\t        var value = this.state.value;\n\t\n\t        if (mask && value) {\n\t            this.setState({ value: value });\n\t        }\n\t    },\n\t    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t        this.hasValue = this.props.value != null;\n\t        this.charsRules = \"formatChars\" in nextProps ? nextProps.formatChars : this.defaultCharsRules;\n\t        this.optionalIndex = this.props.mask.indexOf('?');\n\t\n\t        var oldMask = this.mask;\n\t        var mask = this.parseMask(nextProps.mask.replace('?', ''));\n\t        var isMaskChanged = mask.mask && mask.mask !== this.mask;\n\t\n\t        this.mask = mask.mask;\n\t        this.permanents = mask.permanents;\n\t        this.lastEditablePos = mask.lastEditablePos;\n\t        this.maskChar = \"maskChar\" in nextProps ? nextProps.maskChar : this.defaultMaskChar;\n\t\n\t        if (!this.mask) {\n\t            return;\n\t        }\n\t\n\t        var newValue = nextProps.value != null ? this.getStringValue(nextProps.value) : this.state.value;\n\t\n\t        if (!oldMask && nextProps.value == null) {\n\t            newValue = this.getInputDOMNode().value;\n\t        }\n\t\n\t        var showEmpty = nextProps.alwaysShowMask || this.isFocused();\n\t        if (isMaskChanged || mask.mask && (newValue || showEmpty && !this.hasValue)) {\n\t            newValue = this.formatValue(newValue);\n\t\n\t            if (isMaskChanged) {\n\t                var pos = this.lastCaretPos;\n\t                var filledLen = this.getFilledLength(newValue);\n\t                if (filledLen < pos) {\n\t                    this.setCaretPos(this.getRightEditablePos(filledLen));\n\t                }\n\t            }\n\t        }\n\t        if (mask.mask && this.isEmpty(newValue) && !showEmpty && !this.hasValue) {\n\t            newValue = \"\";\n\t        }\n\t        this.value = newValue;\n\t        if (this.state.value !== newValue) {\n\t            this.setState({ value: newValue });\n\t        }\n\t    },\n\t    componentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n\t        if ((this.mask || prevProps.mask) && this.props.value == null) {\n\t            this.updateUncontrolledInput();\n\t        }\n\t    },\n\t    updateUncontrolledInput: function updateUncontrolledInput() {\n\t        if (this.getInputDOMNode().value !== this.state.value) {\n\t            this.getInputDOMNode().value = this.state.value;\n\t        }\n\t    },\n\t    onKeyDown: function onKeyDown(event) {\n\t        var hasHandler = typeof this.props.onKeyDown === \"function\";\n\t        if (event.ctrlKey || event.metaKey) {\n\t            if (hasHandler) {\n\t                this.props.onKeyDown(event);\n\t            }\n\t            return;\n\t        }\n\t\n\t        var caretPos = this.getCaretPos();\n\t        var value = this.state.value;\n\t        var key = event.key;\n\t        var preventDefault = false;\n\t        switch (key) {\n\t            case \"Backspace\":\n\t            case \"Delete\":\n\t                var prefixLen = this.getPrefix().length;\n\t                var deleteFromRight = key === \"Delete\";\n\t                var selectionRange = this.getSelection();\n\t                if (selectionRange.length) {\n\t                    value = this.clearRange(value, selectionRange.start, selectionRange.length);\n\t                } else if (caretPos < prefixLen || !deleteFromRight && caretPos === prefixLen) {\n\t                    caretPos = prefixLen;\n\t                } else {\n\t                    var editablePos = deleteFromRight ? this.getRightEditablePos(caretPos) : this.getLeftEditablePos(caretPos - 1);\n\t                    if (editablePos !== null) {\n\t                        value = this.clearRange(value, editablePos, 1);\n\t                        caretPos = editablePos;\n\t                    }\n\t                }\n\t                preventDefault = true;\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t\n\t        if (hasHandler) {\n\t            this.props.onKeyDown(event);\n\t        }\n\t\n\t        if (value !== this.state.value) {\n\t            event.target.value = value;\n\t            this.setState({\n\t                value: this.hasValue ? this.state.value : value\n\t            });\n\t            preventDefault = true;\n\t            if (typeof this.props.onChange === \"function\") {\n\t                this.props.onChange(event);\n\t            }\n\t        }\n\t        if (preventDefault) {\n\t            event.preventDefault();\n\t            this.setCaretPos(caretPos);\n\t        }\n\t    },\n\t    onKeyPress: function onKeyPress(event) {\n\t        var key = event.key;\n\t        var hasHandler = typeof this.props.onKeyPress === \"function\";\n\t        if (key === \"Enter\" || event.ctrlKey || event.metaKey) {\n\t            if (hasHandler) {\n\t                this.props.onKeyPress(event);\n\t            }\n\t            return;\n\t        }\n\t\n\t        if (this.isWindowsPhoneBrowser) {\n\t            return;\n\t        }\n\t\n\t        var caretPos = this.getCaretPos();\n\t        var selection = this.getSelection();\n\t        var value = this.state.value;\n\t        var mask = this.mask;\n\t        var maskChar = this.maskChar;\n\t        var lastEditablePos = this.lastEditablePos;\n\t\n\t        var maskLen = mask.length;\n\t        var prefixLen = this.getPrefix().length;\n\t\n\t        if (this.isPermanentChar(caretPos) && mask[caretPos] === key) {\n\t            value = this.insertRawSubstr(value, key, caretPos);\n\t            ++caretPos;\n\t        } else {\n\t            var editablePos = this.getRightEditablePos(caretPos);\n\t            if (editablePos !== null && this.isAllowedChar(key, editablePos)) {\n\t                value = this.clearRange(value, selection.start, selection.length);\n\t                value = this.insertRawSubstr(value, key, editablePos);\n\t                caretPos = editablePos + 1;\n\t            }\n\t        }\n\t\n\t        if (value !== this.state.value) {\n\t            event.target.value = value;\n\t            this.setState({\n\t                value: this.hasValue ? this.state.value : value\n\t            });\n\t            if (typeof this.props.onChange === \"function\") {\n\t                this.props.onChange(event);\n\t            }\n\t        }\n\t        event.preventDefault();\n\t        if (caretPos < lastEditablePos && caretPos > prefixLen) {\n\t            caretPos = this.getRightEditablePos(caretPos);\n\t        }\n\t        this.setCaretPos(caretPos);\n\t    },\n\t    onChange: function onChange(event) {\n\t        var _this6 = this;\n\t\n\t        var pasteSelection = this.pasteSelection;\n\t        var mask = this.mask;\n\t        var maskChar = this.maskChar;\n\t        var lastEditablePos = this.lastEditablePos;\n\t\n\t        var target = event.target;\n\t        var value = this.getInputValue();\n\t        if (!value && this.preventEmptyChange) {\n\t            this.disableValueAccessors();\n\t            this.preventEmptyChange = false;\n\t            target.value = this.state.value;\n\t            return;\n\t        }\n\t        var oldValue = this.state.value;\n\t        if (pasteSelection) {\n\t            this.pasteSelection = null;\n\t            this.pasteText(oldValue, value, pasteSelection, event);\n\t            return;\n\t        }\n\t        var selection = this.getSelection();\n\t        var caretPos = selection.end;\n\t        var maskLen = mask.length;\n\t        var valueLen = value.length;\n\t        var oldValueLen = oldValue.length;\n\t        var prefixLen = this.getPrefix().length;\n\t        var clearedValue;\n\t\n\t        if (valueLen > oldValueLen) {\n\t            var substrLen = valueLen - oldValueLen;\n\t            var startPos = selection.end - substrLen;\n\t            var enteredSubstr = value.substr(startPos, substrLen);\n\t\n\t            if (startPos < maskLen && (substrLen !== 1 || enteredSubstr !== mask[startPos])) {\n\t                caretPos = this.getRightEditablePos(startPos);\n\t            } else {\n\t                caretPos = startPos;\n\t            }\n\t\n\t            value = value.substr(0, startPos) + value.substr(startPos + substrLen);\n\t\n\t            clearedValue = this.clearRange(value, startPos, maskLen - startPos);\n\t            clearedValue = this.insertRawSubstr(clearedValue, enteredSubstr, caretPos);\n\t\n\t            value = this.insertRawSubstr(oldValue, enteredSubstr, caretPos);\n\t\n\t            if (substrLen !== 1 || caretPos >= prefixLen && caretPos < lastEditablePos) {\n\t                caretPos = this.getFilledLength(clearedValue);\n\t            } else if (caretPos < lastEditablePos) {\n\t                caretPos++;\n\t            }\n\t        } else if (valueLen < oldValueLen) {\n\t            var removedLen = maskLen - valueLen;\n\t            clearedValue = this.clearRange(oldValue, selection.end, removedLen);\n\t            var substr = value.substr(0, selection.end);\n\t            var clearOnly = substr === oldValue.substr(0, selection.end);\n\t\n\t            if (maskChar) {\n\t                value = this.insertRawSubstr(clearedValue, substr, 0);\n\t            }\n\t\n\t            clearedValue = this.clearRange(clearedValue, selection.end, maskLen - selection.end);\n\t            clearedValue = this.insertRawSubstr(clearedValue, substr, 0);\n\t\n\t            if (!clearOnly) {\n\t                caretPos = this.getFilledLength(clearedValue);\n\t            } else if (caretPos < prefixLen) {\n\t                caretPos = prefixLen;\n\t            }\n\t        }\n\t        value = this.formatValue(value);\n\t\n\t        if (!this.isAndroidBrowser && !this.isWindowsPhoneBrowser) {\n\t            target.value = value;\n\t\n\t            if (value && !this.getInputValue()) {\n\t                if (this.isAndroidFirefox) {\n\t                    this.value = value;\n\t                    this.enableValueAccessors();\n\t                }\n\t                this.preventEmptyChange = true;\n\t                setTimeout(function () {\n\t                    _this6.preventEmptyChange = false;\n\t                    _this6.disableValueAccessors();\n\t                }, 0);\n\t            }\n\t        }\n\t\n\t        this.setState({\n\t            value: this.hasValue ? this.state.value : value\n\t        });\n\t\n\t        if (typeof this.props.onChange === \"function\") {\n\t            this.props.onChange(event);\n\t        }\n\t        this.setCaretPos(caretPos);\n\t    },\n\t    onFocus: function onFocus(event) {\n\t        if (!this.state.value) {\n\t            var prefix = this.getPrefix();\n\t            var value = this.formatValue(prefix);\n\t            event.target.value = this.formatValue(value);\n\t\n\t            this.setState({\n\t                value: this.hasValue ? this.state.value : value\n\t            }, this.setCaretToEnd);\n\t\n\t            if (typeof this.props.onChange === \"function\") {\n\t                this.props.onChange(event);\n\t            }\n\t        } else if (this.getFilledLength() < this.mask.length) {\n\t            if (this.optionalIndex !== -1) {\n\t                var tempValue = this.state.value.substr(0, this.getFilledLength());\n\t                var optionMask = this.mask.substring(this.getFilledLength()).replace(/[a9\\*]/g, this.maskChar);\n\t                this.setState({\n\t                    value: tempValue + optionMask\n\t                }, this.setCaretToEnd);\n\t            } else {\n\t                this.setCaretToEnd();\n\t            }\n\t        }\n\t\n\t        if (typeof this.props.onFocus === \"function\") {\n\t            this.props.onFocus(event);\n\t        }\n\t    },\n\t    onBlur: function onBlur(event) {\n\t        var clear = function () {\n\t            event.target.value = \"\";\n\t            this.setState({\n\t                value: this.hasValue ? this.state.value : \"\"\n\t            });\n\t            if (typeof this.props.onChange === \"function\") {\n\t                this.props.onChange(event);\n\t            }\n\t        }.bind(this);\n\t        var requiredValue = this.optionalIndex === -1 ? this.state.value : this.state.value.substring(0, this.optionalIndex);\n\t        var optionalValue = this.optionalIndex === -1 ? '' : this.state.value.substring(this.optionalIndex);\n\t\n\t        if (requiredValue.indexOf(this.maskChar) === -1) {\n\t            if (optionalValue !== '') {\n\t                var optionMask = this.mask.substring(this.optionalIndex).replace(/[a9\\*]/g, this.maskChar);\n\t                if (optionMask === optionalValue) {\n\t                    event.target.value = requiredValue;\n\t                } else {\n\t                    var maskCharIndex = optionalValue.indexOf(this.maskChar);\n\t                    optionalValue = maskCharIndex === -1 ? optionalValue : optionalValue.substr(0, maskCharIndex);\n\t                    event.target.value = requiredValue + optionalValue;\n\t                }\n\t                this.setState({ value: event.target.value });\n\t                if (typeof this.props.onChange === \"function\") {\n\t                    this.props.onChange(event);\n\t                }\n\t            }\n\t\n\t            if (typeof this.props.onBlur === \"function\") {\n\t                this.props.onBlur(event);\n\t            }\n\t        } else {\n\t            clear();\n\t        }\n\t    },\n\t    onPaste: function onPaste(event) {\n\t        if (this.isAndroidBrowser) {\n\t            this.pasteSelection = this.getSelection();\n\t            event.target.value = \"\";\n\t            return;\n\t        }\n\t        var text;\n\t        if (window.clipboardData && window.clipboardData.getData) {\n\t            text = window.clipboardData.getData(\"Text\");\n\t        } else if (event.clipboardData && event.clipboardData.getData) {\n\t            text = event.clipboardData.getData(\"text/plain\");\n\t        }\n\t        if (text) {\n\t            var value = this.state.value;\n\t            var selection = this.getSelection();\n\t            this.pasteText(value, text, selection, event);\n\t        }\n\t        event.preventDefault();\n\t    },\n\t    pasteText: function pasteText(value, text, selection, event) {\n\t        var caretPos = selection.start;\n\t        if (selection.length) {\n\t            value = this.clearRange(value, caretPos, selection.length);\n\t        }\n\t        var textLen = this.getRawSubstrLength(value, text, caretPos);\n\t        value = this.insertRawSubstr(value, text, caretPos);\n\t        caretPos += textLen;\n\t        caretPos = this.getRightEditablePos(caretPos) || caretPos;\n\t        if (value !== this.getInputDOMNode().value) {\n\t            if (event) {\n\t                event.target.value = value;\n\t            }\n\t            this.setState({\n\t                value: this.hasValue ? this.state.value : value\n\t            });\n\t            if (event && typeof this.props.onChange === \"function\") {\n\t                this.props.onChange(event);\n\t            }\n\t        }\n\t        this.setCaretPos(caretPos);\n\t    },\n\t    componentDidMount: function componentDidMount() {\n\t        this.isAndroidBrowser = this.isAndroidBrowser();\n\t        this.isWindowsPhoneBrowser = this.isWindowsPhoneBrowser();\n\t        this.isAndroidFirefox = this.isAndroidFirefox();\n\t\n\t        if (this.mask && this.props.value == null) {\n\t            this.updateUncontrolledInput();\n\t        }\n\t    },\n\t    render: function render() {\n\t        var _this7 = this;\n\t\n\t        var _props = this.props;\n\t        var mask = _props.mask;\n\t        var alwaysShowMask = _props.alwaysShowMask;\n\t        var maskChar = _props.maskChar;\n\t        var formatChars = _props.formatChars;\n\t\n\t        var props = _objectWithoutProperties(_props, [\"mask\", \"alwaysShowMask\", \"maskChar\", \"formatChars\"]);\n\t\n\t        if (this.mask) {\n\t            var handlersKeys = [\"onFocus\", \"onBlur\", \"onChange\", \"onKeyDown\", \"onKeyPress\", \"onPaste\"];\n\t            handlersKeys.forEach(function (key) {\n\t                props[key] = _this7[key];\n\t            });\n\t\n\t            if (props.value != null) {\n\t                props.value = this.state.value;\n\t            }\n\t        }\n\t        return React.createElement(\"input\", _extends({ ref: \"input\" }, props));\n\t    }\n\t});\n\t\n\tmodule.exports = InputElement;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(0);\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** InputElement.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { throw err; };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2ca09c881ddb23aad07c\n **/","// https://github.com/sanniassin/react-input-mask\n\nvar React = require(\"react\");\n\nvar InputElement = React.createClass({\n    defaultCharsRules: {\n        \"9\": \"[0-9]\",\n        \"a\": \"[A-Za-z]\",\n        \"*\": \"[A-Za-z0-9]\"\n    },\n    defaultMaskChar: \"_\",\n    optionalIndex: -1,\n    lastCaretPos: null,\n    isAndroidBrowser: function () {\n        var windows = new RegExp(\"windows\", \"i\");\n        var firefox = new RegExp(\"firefox\", \"i\");\n        var android = new RegExp(\"android\", \"i\");\n        var ua = navigator.userAgent;\n        return !windows.test(ua)\n               &&\n               !firefox.test(ua)\n               &&\n               android.test(ua);\n    },\n    isWindowsPhoneBrowser: function () {\n        var windows = new RegExp(\"windows\", \"i\");\n        var phone = new RegExp(\"phone\", \"i\");\n        var ua = navigator.userAgent;\n        return windows.test(ua) && phone.test(ua);\n    },\n    isAndroidFirefox: function () {\n        var windows = new RegExp(\"windows\", \"i\");\n        var firefox = new RegExp(\"firefox\", \"i\");\n        var android = new RegExp(\"android\", \"i\");\n        var ua = navigator.userAgent;\n        return !windows.test(ua)\n            &&\n            firefox.test(ua)\n            &&\n            android.test(ua);\n    },\n    isDOMElement: function (element) {\n        return typeof HTMLElement === \"object\"\n            ? element instanceof HTMLElement // DOM2\n            : element.nodeType === 1 && typeof element.nodeName === \"string\";\n    },\n    // getDOMNode is deprecated but we need it to stay compatible with React 0.12\n    getInputDOMNode: function () {\n        var input = this.refs.input;\n\n        if (!input) {\n            return null;\n        }\n\n        // React 0.14\n        if (this.isDOMElement(input)) {\n            return input;\n        }\n\n        return input.getDOMNode();\n    },\n    enableValueAccessors: function () {\n        var canUseAccessors = !!(Object.getOwnPropertyDescriptor && Object.getPrototypeOf && Object.defineProperty);\n        if (canUseAccessors) {\n            var input = this.getInputDOMNode();\n            this.valueDescriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(input), 'value');\n            Object.defineProperty(input, 'value', {\n                configurable: true,\n                enumerable: true,\n                get: () => this.value,\n                set: (val) => {\n                    this.value = val;\n                    this.valueDescriptor.set.call(input, val);\n                }\n            });\n        }\n    },\n    disableValueAccessors: function () {\n        var { valueDescriptor } = this;\n        if (!valueDescriptor) {\n            return;\n        }\n        this.valueDescriptor = null;\n        var input = this.getInputDOMNode();\n        Object.defineProperty(input, 'value', valueDescriptor);\n    },\n    getInputValue: function () {\n        var input = this.getInputDOMNode();\n        var { valueDescriptor } = this;\n\n        var value;\n        if (valueDescriptor) {\n            value = valueDescriptor.get.call(input);\n        }\n        else {\n            value = input.value;\n        }\n\n        return value;\n    },\n    getPrefix: function () {\n        var prefix = \"\";\n        var { mask } = this;\n        for (var i = 0; i < mask.length && this.isPermanentChar(i); ++i) {\n            prefix += mask[i];\n        }\n        return prefix;\n    },\n    getFilledLength: function (value = this.state.value) {\n        var i;\n        var { maskChar } = this;\n\n        if (!maskChar) {\n            return value.length;\n        }\n\n        for (i = value.length - 1; i >= 0; --i) {\n            var character = value[i];\n            if (!this.isPermanentChar(i) && this.isAllowedChar(character, i)) {\n                break;\n            }\n        }\n\n        return ++i || this.getPrefix().length;\n    },\n    getLeftEditablePos: function (pos) {\n        for (var i = pos; i >= 0; --i) {\n            if (!this.isPermanentChar(i)) {\n                return i;\n            }\n        }\n        return null;\n    },\n    getRightEditablePos: function (pos) {\n        var { mask } = this;\n        for (var i = pos; i < mask.length; ++i) {\n            if (!this.isPermanentChar(i)) {\n                return i;\n            }\n        }\n        return null;\n    },\n    isEmpty: function (value = this.state.value) {\n        return !value.split(\"\").some((character, i) =>\n            !this.isPermanentChar(i) && this.isAllowedChar(character, i)\n        );\n    },\n    isFilled: function (value = this.state.value) {\n        return this.getFilledLength(value) === this.mask.length;\n    },\n    createFilledArray: function (length, val) {\n        var array = [];\n        for (var i = 0; i < length; i++) {\n            array[i] = val;\n        }\n        return array;\n    },\n    formatValue: function (value) {\n        var { maskChar, mask } = this;\n        if (!maskChar) {\n            var prefix = this.getPrefix();\n            var prefixLen = prefix.length;\n            value = this.insertRawSubstr(\"\", value, 0);\n            while (value.length > prefixLen && this.isPermanentChar(value.length - 1)) {\n                value = value.slice(0, value.length - 1);\n            }\n\n            if (value.length < prefixLen) {\n                value = prefix;\n            }\n\n            return value;\n        }\n        if (value) {\n            var emptyValue = this.formatValue(\"\");\n            return this.insertRawSubstr(emptyValue, value, 0);\n        }\n        return value.split(\"\")\n            .concat(this.createFilledArray(mask.length - value.length, null))\n            .map((character, pos) => {\n                if (this.isAllowedChar(character, pos)) {\n                    return character;\n                }\n                else if (this.isPermanentChar(pos)) {\n                    return mask[pos];\n                }\n                return maskChar;\n            })\n            .join(\"\");\n    },\n    clearRange: function (value, start, len) {\n        var end = start + len;\n        var { maskChar, mask } = this;\n        if (!maskChar) {\n            var prefixLen = this.getPrefix().length;\n            value = value.split(\"\")\n                .filter((character, i) => i < prefixLen || i < start || i >= end)\n                .join(\"\");\n            return this.formatValue(value);\n        }\n        return value.split(\"\")\n            .map((character, i) => {\n                if (i < start || i >= end) {\n                    return character;\n                }\n                if (this.isPermanentChar(i)) {\n                    return mask[i];\n                }\n                return maskChar;\n            })\n            .join(\"\");\n    },\n    replaceSubstr: function (value, newSubstr, pos) {\n        return value.slice(0, pos) + newSubstr + value.slice(pos + newSubstr.length);\n    },\n    insertRawSubstr: function (value, substr, pos) {\n        var { mask, maskChar } = this;\n        var isFilled = this.isFilled(value);\n        var prefixLen = this.getPrefix().length;\n        substr = substr.split(\"\");\n\n        if (!maskChar && pos > value.length) {\n            value += mask.slice(value.length, pos);\n        }\n\n        for (var i = pos; i < mask.length && substr.length;) {\n            var isPermanent = this.isPermanentChar(i);\n            if (!isPermanent || mask[i] === substr[0]) {\n                var character = substr.shift();\n                if (this.isAllowedChar(character, i, true)) {\n                    if (i < value.length) {\n                        if (maskChar || isFilled || i < prefixLen) {\n                            value = this.replaceSubstr(value, character, i);\n                        }\n                        else {\n                            value = this.formatValue(value.substr(0, i) + character + value.substr(i));\n                        }\n                    }\n                    else if (!maskChar) {\n                        value += character;\n                    }\n                    ++i;\n                }\n            }\n            else {\n                if (!maskChar && i >= value.length) {\n                    value += mask[i];\n                }\n                else if (maskChar && isPermanent && substr[0] === maskChar) {\n                    substr.shift();\n                }\n                ++i;\n            }\n        }\n        return value;\n    },\n    getRawSubstrLength: function (value, substr, pos) {\n        var { mask, maskChar } = this;\n        substr = substr.split(\"\");\n        for (var i = pos; i < mask.length && substr.length;) {\n            if (!this.isPermanentChar(i) || mask[i] === substr[0]) {\n                var character = substr.shift();\n                if (this.isAllowedChar(character, i, true)) {\n                    ++i;\n                }\n            }\n            else {\n                ++i;\n            }\n        }\n        return i - pos;\n    },\n    isAllowedChar: function (character, pos, allowMaskChar = false) {\n        var { mask, maskChar } = this;\n        if (this.isPermanentChar(pos)) {\n            return mask[pos] === character;\n        }\n        var ruleChar = mask[pos];\n        var charRule = this.charsRules[ruleChar];\n        return (new RegExp(charRule)).test(character || \"\") || (allowMaskChar && character === maskChar);\n    },\n    isPermanentChar: function (pos) {\n        return this.permanents.indexOf(pos) !== -1;\n    },\n    setCaretToEnd: function () {\n        var filledLen = this.getFilledLength();\n        var pos = this.getRightEditablePos(filledLen);\n        if (pos !== null) {\n            this.setCaretPos(pos);\n        }\n    },\n    setSelection: function (start, len = 0) {\n        var input = this.getInputDOMNode();\n        if (!input) {\n            return;\n        }\n\n        var end = start + len;\n        if (\"selectionStart\" in input && \"selectionEnd\" in input) {\n            input.selectionStart = start;\n            input.selectionEnd = end;\n        }\n        else {\n            var range = input.createTextRange();\n            range.collapse(true);\n            range.moveStart(\"character\", start);\n            range.moveEnd(\"character\", end - start);\n            range.select();\n        }\n    },\n    getSelection: function () {\n        var input = this.getInputDOMNode();\n        var start = 0;\n        var end = 0;\n\n        if (\"selectionStart\" in input && \"selectionEnd\" in input) {\n            start = input.selectionStart;\n            end = input.selectionEnd;\n        }\n        else {\n            var range = document.selection.createRange();\n            if (range.parentElement() === input) {\n                start = -range.moveStart(\"character\", -input.value.length);\n                end = -range.moveEnd(\"character\", -input.value.length);\n            }\n        }\n\n        return {\n            start: start,\n            end: end,\n            length: end - start\n        };\n    },\n    getCaretPos: function () {\n        return this.getSelection().start;\n    },\n    setCaretPos: function (pos) {\n        var raf = window.requestAnimationFrame\n            ||\n            window.webkitRequestAnimationFrame\n            ||\n            window.mozRequestAnimationFrame\n            ||\n            ((fn) => setTimeout(fn, 0));\n\n        var setPos = this.setSelection.bind(this, pos, 0);\n\n        setPos();\n        raf(setPos);\n\n        this.lastCaretPos = pos;\n    },\n    isFocused: function () {\n        return document.activeElement === this.getInputDOMNode();\n    },\n    parseMask: function(mask) {\n        if (!mask || typeof mask !== \"string\") {\n            return {\n                mask: null,\n                lastEditablePos: null,\n                permanents: []\n            };\n        }\n        var str = \"\";\n        var permanents = [];\n        var isPermanent = false;\n        var lastEditablePos = null;\n\n        mask.split(\"\").forEach((character) => {\n            if (!isPermanent && character === \"\\\\\") {\n                isPermanent = true;\n            }\n            else {\n                if (isPermanent || !this.charsRules[character]) {\n                    permanents.push(str.length);\n                }\n                else {\n                    lastEditablePos = str.length;\n                }\n                str += character;\n                isPermanent = false;\n            }\n        });\n\n        return {\n            mask: str,\n            lastEditablePos: lastEditablePos,\n            permanents: permanents\n        };\n    },\n    getStringValue: function (value) {\n        return !value && value !== 0 ? \"\" : value + \"\";\n    },\n    getInitialState: function () {\n        this.hasValue = this.props.value != null;\n        this.optionalIndex = this.props.mask.indexOf('?');\n        this.charsRules = \"formatChars\" in this.props ? this.props.formatChars : this.defaultCharsRules;\n\n        var mask = this.parseMask(this.props.mask.replace('?', ''));\n        var defaultValue = this.props.defaultValue != null\n            ? this.props.defaultValue\n            : '';\n        var value = this.props.value != null\n            ? this.props.value\n            : defaultValue;\n\n        value = this.getStringValue(value);\n\n        this.mask = mask.mask;\n        this.permanents = mask.permanents;\n        this.lastEditablePos = mask.lastEditablePos;\n        this.maskChar = \"maskChar\" in this.props ? this.props.maskChar : this.defaultMaskChar;\n\n        if (this.mask && (this.props.alwaysShowMask || value)) {\n            value = this.formatValue(value);\n        }\n\n        return { value };\n    },\n    componentWillMount: function () {\n        var { mask } = this;\n        var { value } = this.state;\n        if (mask && value) {\n            this.setState({ value });\n        }\n    },\n    componentWillReceiveProps: function (nextProps) {\n        this.hasValue = this.props.value != null;\n        this.charsRules = \"formatChars\" in nextProps ? nextProps.formatChars : this.defaultCharsRules;\n        this.optionalIndex = this.props.mask.indexOf('?');\n\n\n        var oldMask = this.mask;\n        var mask = this.parseMask(nextProps.mask.replace('?', ''));\n        var isMaskChanged = mask.mask && mask.mask !== this.mask;\n\n        this.mask = mask.mask;\n        this.permanents = mask.permanents;\n        this.lastEditablePos = mask.lastEditablePos;\n        this.maskChar = \"maskChar\" in nextProps ? nextProps.maskChar : this.defaultMaskChar;\n\n        if (!this.mask) {\n            return;\n        }\n\n        var newValue = nextProps.value != null\n            ? this.getStringValue(nextProps.value)\n            : this.state.value;\n\n        if (!oldMask && nextProps.value == null) {\n            newValue = this.getInputDOMNode().value;\n        }\n\n        var showEmpty = nextProps.alwaysShowMask || this.isFocused();\n        if (isMaskChanged || (mask.mask && (newValue || (showEmpty && !this.hasValue)))) {\n            newValue = this.formatValue(newValue);\n\n            if (isMaskChanged) {\n                var pos = this.lastCaretPos;\n                var filledLen = this.getFilledLength(newValue);\n                if (filledLen < pos) {\n                    this.setCaretPos(this.getRightEditablePos(filledLen));\n                }\n            }\n        }\n        if (mask.mask && this.isEmpty(newValue) && !showEmpty && !this.hasValue) {\n            newValue = \"\";\n        }\n        this.value = newValue;\n        if (this.state.value !== newValue) {\n            this.setState({ value: newValue });\n        }\n    },\n    componentDidUpdate: function(prevProps, prevState) {\n        if ((this.mask || prevProps.mask) && this.props.value == null) {\n            this.updateUncontrolledInput();\n        }\n    },\n    updateUncontrolledInput: function() {\n        if (this.getInputDOMNode().value !== this.state.value) {\n            this.getInputDOMNode().value = this.state.value;\n        }\n    },\n    onKeyDown: function(event) {\n        var hasHandler = typeof this.props.onKeyDown === \"function\";\n        if (event.ctrlKey || event.metaKey) {\n            if (hasHandler) {\n                this.props.onKeyDown(event);\n            }\n            return;\n        }\n\n        var caretPos = this.getCaretPos();\n        var value = this.state.value;\n        var key = event.key;\n        var preventDefault = false;\n        switch (key) {\n            case \"Backspace\":\n            case \"Delete\":\n                var prefixLen = this.getPrefix().length;\n                var deleteFromRight = key === \"Delete\";\n                var selectionRange = this.getSelection();\n                if (selectionRange.length) {\n                    value = this.clearRange(value, selectionRange.start, selectionRange.length);\n                }\n                else if (caretPos < prefixLen || (!deleteFromRight && caretPos === prefixLen)) {\n                    caretPos = prefixLen;\n                }\n                else {\n                    var editablePos = deleteFromRight ? this.getRightEditablePos(caretPos) : this.getLeftEditablePos(caretPos - 1);\n                    if (editablePos !== null) {\n                        value = this.clearRange(value, editablePos, 1);\n                        caretPos = editablePos;\n                    }\n                }\n                preventDefault = true;\n                break;\n            default:\n                break;\n        }\n\n        if (hasHandler) {\n            this.props.onKeyDown(event);\n        }\n\n        if (value !== this.state.value) {\n            event.target.value = value;\n            this.setState({\n                value: this.hasValue ? this.state.value : value\n            });\n            preventDefault = true;\n            if (typeof this.props.onChange === \"function\") {\n                this.props.onChange(event);\n            }\n        }\n        if (preventDefault) {\n            event.preventDefault();\n            this.setCaretPos(caretPos);\n        }\n    },\n    onKeyPress: function (event) {\n        var key = event.key;\n        var hasHandler = typeof this.props.onKeyPress === \"function\";\n        if (key === \"Enter\" || event.ctrlKey || event.metaKey) {\n            if (hasHandler) {\n                this.props.onKeyPress(event);\n            }\n            return;\n        }\n\n        if (this.isWindowsPhoneBrowser) {\n            return;\n        }\n\n        var caretPos = this.getCaretPos();\n        var selection = this.getSelection();\n        var { value } = this.state;\n        var { mask, maskChar, lastEditablePos } = this;\n        var maskLen = mask.length;\n        var prefixLen = this.getPrefix().length;\n\n        if (this.isPermanentChar(caretPos) && mask[caretPos] === key) {\n            value = this.insertRawSubstr(value, key, caretPos);\n            ++caretPos;\n        }\n        else {\n            var editablePos = this.getRightEditablePos(caretPos);\n            if (editablePos !== null && this.isAllowedChar(key, editablePos)) {\n                value = this.clearRange(value, selection.start, selection.length);\n                value = this.insertRawSubstr(value, key, editablePos);\n                caretPos = editablePos + 1;\n            }\n        }\n\n        if (value !== this.state.value) {\n            event.target.value = value;\n            this.setState({\n                value: this.hasValue ? this.state.value : value\n            });\n            if (typeof this.props.onChange === \"function\") {\n                this.props.onChange(event);\n            }\n        }\n        event.preventDefault();\n        if (caretPos < lastEditablePos && caretPos > prefixLen) {\n            caretPos = this.getRightEditablePos(caretPos);\n        }\n        this.setCaretPos(caretPos);\n    },\n    onChange: function(event) {\n        var { pasteSelection, mask, maskChar, lastEditablePos } = this;\n        var target = event.target;\n        var value = this.getInputValue();\n        if (!value && this.preventEmptyChange) {\n            this.disableValueAccessors();\n            this.preventEmptyChange = false;\n            target.value = this.state.value;\n            return;\n        }\n        var oldValue = this.state.value;\n        if (pasteSelection) {\n            this.pasteSelection = null;\n            this.pasteText(oldValue, value, pasteSelection, event);\n            return;\n        }\n        var selection = this.getSelection();\n        var caretPos = selection.end;\n        var maskLen = mask.length;\n        var valueLen = value.length;\n        var oldValueLen = oldValue.length;\n        var prefixLen = this.getPrefix().length;\n        var clearedValue;\n\n        if (valueLen > oldValueLen) {\n            var substrLen = valueLen - oldValueLen;\n            var startPos = selection.end - substrLen;\n            var enteredSubstr = value.substr(startPos, substrLen);\n\n            if (startPos < maskLen && (substrLen !== 1 || enteredSubstr !== mask[startPos])) {\n                caretPos = this.getRightEditablePos(startPos);\n            }\n            else {\n                caretPos = startPos;\n            }\n\n            value = value.substr(0, startPos) + value.substr(startPos + substrLen);\n\n            clearedValue = this.clearRange(value, startPos, maskLen - startPos);\n            clearedValue = this.insertRawSubstr(clearedValue, enteredSubstr, caretPos);\n\n            value = this.insertRawSubstr(oldValue, enteredSubstr, caretPos);\n\n            if (substrLen !== 1 || caretPos >= prefixLen && caretPos < lastEditablePos) {\n                caretPos = this.getFilledLength(clearedValue);\n            }\n            else if (caretPos < lastEditablePos) {\n                caretPos++;\n            }\n        }\n        else if (valueLen < oldValueLen) {\n            var removedLen = maskLen - valueLen;\n            clearedValue = this.clearRange(oldValue, selection.end, removedLen);\n            var substr = value.substr(0, selection.end);\n            var clearOnly = substr === oldValue.substr(0, selection.end);\n\n            if (maskChar) {\n                value = this.insertRawSubstr(clearedValue, substr, 0);\n            }\n\n            clearedValue = this.clearRange(clearedValue, selection.end, maskLen - selection.end);\n            clearedValue = this.insertRawSubstr(clearedValue, substr, 0);\n\n            if (!clearOnly) {\n                caretPos = this.getFilledLength(clearedValue);\n            }\n            else if (caretPos < prefixLen) {\n                caretPos = prefixLen;\n            }\n        }\n        value = this.formatValue(value);\n\n        // prevent android autocomplete insertion on backspace\n        // prevent hanging after first entered character on Windows 10 Mobile\n        if (!this.isAndroidBrowser && !this.isWindowsPhoneBrowser) {\n            target.value = value;\n\n            if (value && !this.getInputValue()) {\n                if (this.isAndroidFirefox) {\n                    this.value = value;\n                    this.enableValueAccessors();\n                }\n                this.preventEmptyChange = true;\n                setTimeout(() => {\n                    this.preventEmptyChange = false;\n                    this.disableValueAccessors();\n                }, 0);\n            }\n        }\n\n        this.setState({\n            value: this.hasValue ? this.state.value : value\n        });\n\n        if (typeof this.props.onChange === \"function\") {\n            this.props.onChange(event);\n        }\n        this.setCaretPos(caretPos);\n    },\n    onFocus: function (event) {\n        if (!this.state.value) {\n            var prefix = this.getPrefix();\n            var value = this.formatValue(prefix);\n            event.target.value = this.formatValue(value);\n\n            this.setState({\n                value: this.hasValue ? this.state.value : value\n            }, this.setCaretToEnd);\n\n            if (typeof this.props.onChange === \"function\") {\n                this.props.onChange(event);\n            }\n        } else if (this.getFilledLength() < this.mask.length) {\n            if (this.optionalIndex !== -1) {\n                var tempValue = this.state.value.substr(0, this.getFilledLength());\n                var optionMask = this.mask.substring(this.getFilledLength()).replace(/[a9\\*]/g, this.maskChar);\n                this.setState({\n                    value: tempValue + optionMask\n                }, this.setCaretToEnd);\n            } else {\n                this.setCaretToEnd();\n            }\n        }\n\n        if (typeof this.props.onFocus === \"function\") {\n            this.props.onFocus(event);\n        }\n    },\n    onBlur: function (event) {\n        var clear = function () {\n            event.target.value = \"\";\n            this.setState({\n                value: this.hasValue ? this.state.value : \"\"\n            });\n            if (typeof this.props.onChange === \"function\") {\n                this.props.onChange(event);\n            }\n        }.bind(this);\n        var requiredValue = this.optionalIndex === -1 ? this.state.value : this.state.value.substring(0, this.optionalIndex);\n        var optionalValue = this.optionalIndex === -1 ? '' : this.state.value.substring(this.optionalIndex);\n\n        if (requiredValue.indexOf(this.maskChar) === -1) {\n            if (optionalValue !== '') {\n                var optionMask = this.mask.substring(this.optionalIndex).replace(/[a9\\*]/g, this.maskChar);\n                if (optionMask === optionalValue) {\n                    event.target.value = requiredValue;\n                } else {\n                    var maskCharIndex = optionalValue.indexOf(this.maskChar);\n                    optionalValue = maskCharIndex === -1 ? optionalValue : optionalValue.substr(0, maskCharIndex);\n                    event.target.value = requiredValue + optionalValue;\n                }\n                this.setState({ value: event.target.value });\n                if (typeof this.props.onChange === \"function\") {\n                    this.props.onChange(event);\n                }\n            }\n\n            if (typeof this.props.onBlur === \"function\") {\n                this.props.onBlur(event);\n            }\n        } else {\n            clear();\n        }\n    },\n    onPaste: function (event) {\n        if (this.isAndroidBrowser) {\n            this.pasteSelection = this.getSelection();\n            event.target.value = \"\";\n            return;\n        }\n        var text;\n        if (window.clipboardData && window.clipboardData.getData) { // IE\n            text = window.clipboardData.getData(\"Text\");\n        }\n        else if (event.clipboardData && event.clipboardData.getData) {\n            text = event.clipboardData.getData(\"text/plain\");\n        }\n        if (text) {\n            var value = this.state.value;\n            var selection = this.getSelection();\n            this.pasteText(value, text, selection, event);\n        }\n        event.preventDefault();\n    },\n    pasteText: function (value, text, selection, event) {\n        var caretPos = selection.start;\n        if (selection.length) {\n            value = this.clearRange(value, caretPos, selection.length);\n        }\n        var textLen = this.getRawSubstrLength(value, text, caretPos);\n        value = this.insertRawSubstr(value, text, caretPos);\n        caretPos += textLen;\n        caretPos = this.getRightEditablePos(caretPos) || caretPos;\n        if (value !== this.getInputDOMNode().value) {\n            if (event) {\n                event.target.value = value;\n            }\n            this.setState({\n                value: this.hasValue ? this.state.value : value\n            });\n            if (event && typeof this.props.onChange === \"function\") {\n                this.props.onChange(event);\n            }\n        }\n        this.setCaretPos(caretPos);\n    },\n    componentDidMount: function () {\n        this.isAndroidBrowser = this.isAndroidBrowser();\n        this.isWindowsPhoneBrowser = this.isWindowsPhoneBrowser();\n        this.isAndroidFirefox = this.isAndroidFirefox();\n\n        if (this.mask && this.props.value == null) {\n            this.updateUncontrolledInput();\n        }\n    },\n    render: function() {\n        var { mask, alwaysShowMask, maskChar, formatChars, ...props } = this.props;\n        if (this.mask) {\n            var handlersKeys = [\"onFocus\", \"onBlur\", \"onChange\", \"onKeyDown\", \"onKeyPress\", \"onPaste\"];\n            handlersKeys.forEach((key) => {\n                props[key] = this[key];\n            });\n\n            if (props.value != null) {\n                props.value = this.state.value;\n            }\n        }\n        return <input ref=\"input\" {...props}/>;\n    }\n});\n\nmodule.exports = InputElement;\n\n\n\n/** WEBPACK FOOTER **\n ** ./InputElement.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}